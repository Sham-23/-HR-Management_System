@model EmployeeManagementSystemCore.ViewModels.ProjectMembersViewModel
@{
    ViewBag.Title = Convert.ToString(ViewData["ProjectName"]);

    var emp = (EmployeeManagementSystemCore.ViewModels.EmployeeIdNameViewModelList)ViewData["EmpIdNameList"];
    //var proj = (EmployeeManagementSystemCore.Models.Project)ViewData["ProjectsList"];



    var EmployeeOptions = new List<SelectListItem>() /*{ new SelectListItem { Text = "Select Employee", Value = "" } }*/;
    foreach (var item in emp.EmployeeIdNameList)
    {
        EmployeeOptions.Add(new SelectListItem() { Text = item.FirstName, Value = item.EmployeeId.ToString(), Selected = true });

    }


    var ProjectOptions = new List<SelectListItem>() @*{ new SelectListItem { Text = "Select Project", Value = "" } }*@;
    //foreach (var item in proj.ProjectList)
    //{
    //ProjectOptions.Add(new SelectListItem() { Text = item.ProjectName, Value = item.ProjectId.ToString() });
    //}
}

@if (Convert.ToInt16((Session["role"]).ToString()) == 1 && ViewBag.AddProjectMembers == null)
{


    using (Html.BeginForm("SaveProjectMember", "Admin", Model))
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal mx-auto align-center  ">
            <h4 class="addEmp">@Convert.ToString(ViewData["ProjectName"])</h4>
            <hr id="addemphr" />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group col-md-6">
                @*                @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-4" })*@
                <label class="control-label col-md-4">Select Employee </label>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.EmployeeId, EmployeeOptions, htmlAttributes: new { @class = "text-left Role-Down select-add-Employee ", required = "required" })

                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>
            <!--<div class="form-group col-md-6">-->
                @*@Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-4" })*@
                <!--<label class="control-label col-md-4">Selected Project</label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ProjectId, new { htmlAttributes = new { @class = "form-control",  disabled = "disabled" } })
                </div>
            </div>-->

            <div class="form-group col-md-12  row justify-content-md-center add-project-btn-div">
                <div class="col-md-1 col-sm-12 col ">
                    <input id="emp-create-btn" type="submit" value="Add" class="btn-primary btn-default " />
                </div>

                <div class="col-md-1 col-sm-12 col" id="Addproject-form-back-list">

                    @Html.ActionLink("Back", "Department", "Admin", new { @class = "btn-success -default" })

                </div>

            </div>


        </div>


    }
}
else if (ViewBag.AddProjectMembers != null)
{
    <div>
        <p>
            @ViewBag.AddProjectMembers
        </p>
    </div>
}
else
{
    <td> You are not Authorized </td>
}


<script>
    $(".select-add-Employee").prepend("<option value='' disabled selected>Select Employee...</option>");

</script>


