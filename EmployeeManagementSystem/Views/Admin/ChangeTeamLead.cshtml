@model EmployeeManagementSystemCore.Models.Project

@{
    
    Layout = "~/Views/Shared/_Layout.cshtml";
    var emp = (EmployeeManagementSystemCore.ViewModels.EmployeeIdNameViewModelList)ViewData["TeamLeadWithProject"];


    var empOptions = new List<SelectListItem>() /*{ new SelectListItem { Text = "Select Employee", Value = "" } }*/;

    foreach (var item in emp.EmployeeIdNameList)
    {
        empOptions.Add(new SelectListItem() { Text = item.FirstName, Value = item.EmployeeId.ToString() });
    }
    var project = (EmployeeManagementSystemCore.Models.Project)ViewData["AllProjects"];


    var projectOptions = new List<SelectListItem>() /*{ new SelectListItem { Text = "Select Employee", Value = "" } }*/;

    foreach (var item in project.ProjectList)
    {
        projectOptions.Add(new SelectListItem() { Text = item.ProjectName, Value = item.ProjectId.ToString() });
    }
}

@if (Convert.ToInt16((Session["Role"]).ToString()) == 1 && ViewBag.AddProject == null)
{
    using (Html.BeginForm("UpdateTeamLead", "Admin", Model))

    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal mx-auto align-center  ">
            <h4 class="addEmp">Change Team Lead</h4>
            <hr id="addemphr" />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group col-md-6">
                @*@Html.LabelFor(model => model.ProjectHeadEmployeeId, htmlAttributes: new { @class = "control-label col-md-4" })
                *@
                <label class="control-label col-md-4">Project Head</label>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.ProjectId, projectOptions, htmlAttributes: new { @class = "text-left Role-Down  select-add-Project", required = "required" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @*@Html.LabelFor(model => model.ProjectHeadEmployeeId, htmlAttributes: new { @class = "control-label col-md-4" })
                *@
                <label class="control-label col-md-4">Project Head</label>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.ProjectHeadEmployeeId, empOptions, htmlAttributes: new { @class = "text-left Role-Down  select-add-Project", required = "required" })
                    @Html.ValidationMessageFor(model => model.ProjectHeadEmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>





            <div class="form-group col-md-12  row justify-content-md-center add-project-btn-div">
                <div class="col-md-1 col-sm-12 col ">
                    <input id="emp-create-btn" type="submit" value="Change" class="btn-primary btn-default " />
                </div>

                <div class="col-md-1 col-sm-12 col" id="Addproject-form-back-list">

                    @Html.ActionLink("Back", "Department", "Admin", new { @class = "btn-success -default" })

                </div>

            </div>

        </div>

    }
}
else if (ViewBag.AddProject != null)
{
    < div >
    < p >
    @ViewBag.AddProject
    </ p >
    </ div >
}
else
{
    < td > You are not Authorized </ td >
}

<script>
    $(".select-add-Project").prepend("<option value='' disabled selected>Select Project...</option>");

</script>





